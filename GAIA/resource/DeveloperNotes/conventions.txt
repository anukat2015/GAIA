Before working with the code, please read the following conventions so we have consistent code.

Abbreviations:
==============

TODO:
DC: Design Choice
AU: Author


Coding Conventions:
===================

--- We will be using Eclipse as the main editor of this project and will use the formatting provided
by default in Eclipse v3.3.1. (Using source folder is a new practice convention implemented in Eclipse
which may cause problems with previous versions.)

--- When one of us creates a new class, he/she should put his/her name as @author. 
Unless otherwise specified, every field and method of that class will be assumed to be written by that author.
If one of us decides to add new fields/methods, then we should put our name using AU abbreviation along with
our name at the top of the beginning of that field/method.

--- We will use the Java naming conventions given in:
http://java.sun.com/docs/codeconv/html/CodeConventions.doc8.html
In addition, to differentiate between member variables and static variables, we will address all member variables
internally using the "this" keyword, (i.e. this.varname) and static variables using the class name (i.e. Class.varname).

--- When implementing an algorithm, please include references, both website and paper, as a pointer in the java documentation.

--- Update the following files as appropriate:
installationnotes.txt - Notes on how to install and use GAIA
externallibraries.txt - Information on external libraries used in the tool and where to get them

--- Code specific to a particular experiment (i.e. Driver code to run a series of experiments), unless written
generally, should not be included in the GAIA repository.  Place project specific code into its own
java project and import/add the path to the GAIA module separately.

--- Do not use System.out or System.exit in the code.  Use the utilities provided under the Log.java class.

--- Minimize the use of external libraries.  If they must be used, document them appropriately under
externallibraries.txt.  Also, add the library to the thirdparty library in the internal directory for use
with development.

--- Never include the Internal directory in any public releases.

GAIA Conventions:
================

--- Use Iterators instead of Collections for any Collection which has can have arbitrary size.  Using
iterators will allow the code you write to be used over data which may be too large to store in memory.

--- Use the Log utilities to debug code.  Use the appropriate log levels in the code.  Make sure log levels
used for developing (i.e., Log.DEV) are never included in any release code.

--- Never leave pieces of code commented out in the release version.

--- Leave lots of comments in your algorithm to allow future developers to understand your code.

--- Always document the changes made in each commit to the code.  Be as complete as possible, particularly with changes
in code that may impact someone else's work.

--- Use the utilities package.  Make sure to understand what pieces of code are available in order to avoid
redundancy.  Also, implement any functions which you think maybe useful for others in utilities.

