<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="GAIA">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="GAIA.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/prefuse-20071021/prefuse.jar"/>
        <pathelement location="lib/jung-2beta1/jung-api-2.0-beta1.jar"/>
        <pathelement location="lib/jung-2beta1/collections-generic-4.01.jar"/>
        <pathelement location="lib/jung-2beta1/concurrent-1.3.4.jar"/>
        <pathelement location="lib/libstemmer-20090108/snowball.jar"/>
        <pathelement location="lib/junit-4.4/junit-4.4.jar"/>
        <pathelement location="lib/derby-10.5.3.0/derby.jar"/>
        <pathelement location="lib/jama-1.0.2/Jama-1.0.2.jar"/>
        <pathelement location="lib/jung-2beta1/jung-graph-impl-2.0-beta1.jar"/>
        <pathelement location="lib/jung-2beta1/jung-algorithms-2.0-beta1.jar"/>
        <pathelement location="lib/groovy-1.7.1/groovy-all-1.7.1.jar"/>
        <pathelement location="lib/commons-codec-1.4/commons-codec-1.4.jar"/>
        <pathelement location="lib/libsvm-3.0/libsvm.jar"/>
        <pathelement location="lib/junto-1.2.2/junto.jar"/>
        <pathelement location="lib/commons-math-2.2/commons-math-2.2.jar"/>
        <pathelement location="lib/jung-2beta1/jung-io-2.0-beta1.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="linqs/gaia/experiment/groovy/feature.groovy"/>
                <exclude name="linqs/gaia/experiment/groovy/sample.groovy"/>
                <exclude name="linqs/gaia/experiment/groovy/simple.groovy"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <exclude name="linqs/gaia/experiment/groovy/feature.groovy"/>
            <exclude name="linqs/gaia/experiment/groovy/sample.groovy"/>
            <exclude name="linqs/gaia/experiment/groovy/simple.groovy"/>
            <classpath refid="GAIA.classpath"/>
        </javac>
    </target>
    <target name="AllTests (4)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="linqs.gaia.test.AllTests" todir="${junit.output.dir}"/>
            <classpath refid="GAIA.classpath"/>
        </junit>
    </target>
    <target name="GraphAnalysisExperiment (1)">
        <java classname="linqs.gaia.experiment.GraphAnalysisExperiment" failonerror="true" fork="yes">
            <classpath refid="GAIA.classpath"/>
        </java>
    </target>
    <target name="GraphAnalysisExperimentTestCase (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="linqs.gaia.experiment.test.GraphAnalysisExperimentTestCase" todir="${junit.output.dir}"/>
            <classpath refid="GAIA.classpath"/>
        </junit>
    </target>
    <target name="GraphGeneratorExperimentTestCase (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="linqs.gaia.experiment.test.GraphGeneratorExperimentTestCase" todir="${junit.output.dir}"/>
            <classpath refid="GAIA.classpath"/>
        </junit>
    </target>
    <target name="GraphVisualizationExperimentTestCase (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="linqs.gaia.experiment.test.GraphVisualizationExperimentTestCase" todir="${junit.output.dir}"/>
            <classpath refid="GAIA.classpath"/>
        </junit>
    </target>
    <target name="OCExperimentTestCase (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="linqs.gaia.experiment.test.OCExperimentTestCase" todir="${junit.output.dir}"/>
            <classpath refid="GAIA.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
